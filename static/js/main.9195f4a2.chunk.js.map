{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","LocalStorage.js","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Section","title","children","className","s","section","FormHooks","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numInputId","handleChange","e","currentTarget","value","reset","preventDefault","htmlFor","formInput","placeholder","id","type","pattern","required","onChange","formBtn","ContactsList","contacts","onDeleteContact","contactList","map","contactItem","deleteBtn","onClick","Filter","label","filterInput","target","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","AppHooks","setContacts","filter","setFilter","Form","find","contact","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","unId","addContact","success","toLowerCase","includes","contId","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9195f4a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./Form.module.css\";\n\nconst FormHooks = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Name\"\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor={numInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Tel\"\n            id={numInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default FormHooks;\n\n// export default class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n//   nameInputId = shortid.generate();\n//   numInputId = shortid.generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor={this.nameInputId}>\n//             <input\n//               className={s.formInput}\n//               placeholder=\"Name\"\n//               id={this.nameInputId}\n//               type=\"text\"\n//               name=\"name\"\n//               value={this.state.name}\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//               required\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label htmlFor={this.numInputId}>\n//             <input\n//               className={s.formInput}\n//               placeholder=\"Tel\"\n//               id={this.numInputId}\n//               type=\"tel\"\n//               name=\"number\"\n//               value={this.state.number}\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//               required\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <button className={s.formBtn} type=\"submit\">\n//             Add contact\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p>\n            {name},{number}\n          </p>\n          <button\n            className={s.deleteBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    <input\n      className={s.filterInput}\n      placeholder=\"Find contacts\"\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import { useState } from \"react\";\nimport React from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FormHooks from \"./components/Form/Form\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as unId } from \"uuid\";\nimport useLocalStorage from \"./LocalStorage\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function AppHooks() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: unId(),\n      name,\n      number,\n    };\n\n    setContacts((contacts) => [contact, ...contacts]);\n  };\n\n  const handleSubmitContact = ({ name, number }) => {\n    if (contacts.find((contact) => contact.name === name)) {\n      toast.error(`'${name}' is already in your list`, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    if (contacts.find((contact) => contact.number === number)) {\n      toast.error(`'${number}' is already in your list`, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    addContact(name, number);\n    toast.success(`'${name}' added to phonebook`, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  const deleteContact = (contId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contId));\n    toast(`Deleted`, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const changeFilter = (filter) => setFilter(filter.toLowerCase());\n  const visibleContacts = () => {\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(filter) ||\n        contact.number.includes(filter)\n    );\n  };\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <FormHooks onSubmit={handleSubmitContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactsList\n          contacts={visibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   isInList = (contact, contacts) =>\n//     contacts.find((cont) =>\n//       cont.name.toLocaleLowerCase().includes(contact.name.toLocaleLowerCase())\n//     );\n//   addContact = (e) => {\n//     const { contacts } = this.state;\n//     console.log({ contacts });\n//     const contact = {\n//       id: unId(),\n//       name: e.name,\n//       number: e.number,\n//     };\n\n//     this.isInList(contact, contacts)\n//       ? alert(`${contact.name} is already in your list`)\n//       : this.setState(({ contacts }) => ({\n//           contacts: [contact, ...contacts],\n//         }));\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter((cont) => cont.id !== contactId),\n//     }));\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n//   componentDidMount() {\n//     // console.log('didmount');\n//     const contacts = localStorage.getItem(\"contacts\");\n//     // console.log(contacts);\n//     const parsedContacts = JSON.parse(contacts);\n//     // console.log(parsedContacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const normalizeContacts = this.state.filter.toLocaleLowerCase();\n//     const visibleContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLocaleLowerCase().includes(normalizeContacts)\n//     );\n//     const { filter } = this.state;\n//     return (\n//       <div>\n//         <Section title=\"Phonebook\">\n//           <Form onSubmit={this.addContact} />\n//         </Section>\n//         <Section title=\"Contacts\">\n//           <Filter value={filter} onChange={this.changeFilter} />\n//           <ContactsList\n//             contacts={visibleContacts}\n//             onDeleteContact={this.deleteContact}\n//           />\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Form_formInput__7h6Ga\",\"formBtn\":\"Form_formBtn__6_XDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\",\"deleteBtn\":\"ContactsList_deleteBtn__9HgYF\",\"icon\":\"ContactsList_icon__1TDhV\"};"],"sourceRoot":""}